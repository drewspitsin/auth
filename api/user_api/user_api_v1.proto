syntax = "proto3";

package user_api_v1;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "validate/validate.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/drewspitsin/auth/pkg/user_api_v1;user_api_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Auth"
    version: "1.0.0"
    contact: {
      name: "Andrew Spitsin"
    };
  };

  host: "localhost:8080",
  schemes: HTTP,
  schemes: HTTPS,
  consumes: "application/json",
  produces: "application/json",
};

service UserV1 {
    // Create user
    rpc Create(CreateRequest) returns (CreateResponse){
        option (google.api.http) = {
          post: "/user/v1/create"
          body: "*"
        };
      }
      // Get user
      rpc Get(GetRequest) returns (GetResponse){
        option (google.api.http) = {
          get: "/user/v1"
        };
      }
      // Update user
      rpc Update(UpdateRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
          patch: "/user/v1"
          body: "*"
        };
      }
      // Delete user
      rpc Delete(DeleteRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
          delete: "/user/v1"
        };
      }
}

message User {
        // User create struct
        UserCreate user_create = 1;
        // Created
        google.protobuf.Timestamp created_at = 2;
        // Updated
        google.protobuf.Timestamp updated_at = 3;
}

message UserCreate {
        // User update struct
        UserUpdate user_update = 1;
        // Password
        string password = 2;
}

message UserUpdate {
        // ID
        int64 id = 1;
        // Name
        string name = 2 [(validate.rules).string = {min_len: 1, max_len: 50}];
        // Email
        string email = 3;
        // Role
        Role role = 5; 
}

enum Role {
    UNKNOWN = 0;
    ADMIN = 1;
    USER = 2;
}

message CreateRequest {
    UserCreate info = 1;
}

message CreateResponse {
    int64 id = 1;
}

message GetRequest {
    int64 id = 1;
}

message GetResponse {
    User info = 1;
}

message UpdateRequest {
    UserUpdate info = 1;
}

message DeleteRequest {
    int64 id = 1;
}